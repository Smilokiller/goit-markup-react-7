{"version":3,"sources":["components/telBook/telBook.module.css","components/telBook/telInput/contactList.module.css","components/telBook/telInput/contactListFind.module.css","redux/telBookReducers.js","redux/telBookOperations.js","components/telBook/telBookSelectors.js","components/telBook/telInput/ContactList.js","redux/store.js","components/telBook/telInput/FindInput.js","components/telBook/telInput/contactForm/TelInput.js","components/telBook/telInput/contactForm/ContactForm.js","components/telBook/TelBook.js","components/App.js","index.js"],"names":["module","exports","telBookReducers","createSlice","name","initialState","contacts","items","filter","reducers","getContacts","state","type","payload","addContacts","deleteContacts","el","id","filterContacts","addRequest","loading","addSuccess","addError","dispatch","actions","axios","post","then","responce","data","catch","error","get","response","Object","keys","map","delete","getFilteredContcats","createSelector","toLowerCase","includes","connect","useDispatch","TransitionGroup","component","CSSTransition","classNames","styles","key","timeout","className","listItems","text","number","Button","variant","color","onClick","telBookOperations","reducer","store","configureStore","useStyles","makeStyles","theme","root","margin","spacing","width","display","onChange","classes","unmountOnExit","in","getState","length","TextField","label","TelInput","prop","style","value","console","log","useState","allertShow","setAllertShow","setName","setNumber","handleChange","target","alert","noValidate","autoComplete","onSubmit","evt","preventDefault","find","setTimeout","TelBook","useEffect","body","appear","title","event","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4561440.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"telBook_enter__1Pt3B\",\"enterActive\":\"telBook_enterActive__27L32\",\"exit\":\"telBook_exit__1rAiO\",\"exitActive\":\"telBook_exitActive__2DrLk\",\"appear\":\"telBook_appear__2Bksu\",\"appearActive\":\"telBook_appearActive__3P04R\",\"alert\":\"telBook_alert__3HghW\",\"body\":\"telBook_body__2xRYD\",\"title\":\"telBook_title__3dcK1\",\"form\":\"telBook_form__2XgCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactList_enter__ZOWop\",\"enterActive\":\"contactList_enterActive__wujHn\",\"exit\":\"contactList_exit__2Qj9v\",\"exitActive\":\"contactList_exitActive__2uBVP\",\"listItems\":\"contactList_listItems__3HlZ6\",\"text\":\"contactList_text__24GwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactListFind_enter__cr-TL\",\"enterActive\":\"contactListFind_enterActive__2umbc\",\"exit\":\"contactListFind_exit__2b4K4\",\"exitActive\":\"contactListFind_exitActive__21_VY\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nexport const telBookReducers = createSlice({\r\n  name: \"@contacts\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    getContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: payload,\r\n      },\r\n    }),\r\n    addContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: [...state.contacts.items, payload],\r\n      },\r\n    }),\r\n    deleteContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: state.contacts.items.filter((el) => el.id !== payload),\r\n      },\r\n    }),\r\n    filterContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        filter: payload,\r\n      },\r\n    }),\r\n    addRequest: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n    addSuccess: (state) => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n    addError: (state) => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { telBookReducers } from \"./telBookReducers\";\r\n\r\nconst addContact = (items) => (dispatch) => {\r\n  const {\r\n    actions: { addContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n  dispatch(addRequest());\r\n\r\n  axios\r\n    .post(\"https://reacthw7.firebaseio.com/contacts.json\", items)\r\n    .then((responce) => {\r\n      dispatch(addContacts({ ...items, id: responce.data.name }));\r\n      dispatch(addSuccess());\r\n    })\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nconst getContacts = () => (dispatch) => {\r\n  const {\r\n    actions: { getContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n\r\n  dispatch(addRequest());\r\n\r\n  axios\r\n    .get(\"https://reacthw7.firebaseio.com/contacts.json\")\r\n    .then((response) => {\r\n      const data = Object.keys(response.data).map((id) => {\r\n        return { id, ...response.data[id] };\r\n      });\r\n      dispatch(getContacts(data));\r\n      dispatch(addSuccess());\r\n    })\r\n\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  const {\r\n    actions: { deleteContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n\r\n  dispatch(addRequest());\r\n  axios\r\n    .delete(`https://reacthw7.firebaseio.com/contacts/${id}.json`)\r\n    .then(() => {\r\n      dispatch(deleteContacts(id));\r\n      dispatch(addSuccess());\r\n    })\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nexport default { addContact, getContacts, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getFilteredContcats = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return filter\r\n      ? contacts.filter((el) =>\r\n          el.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n      : contacts;\r\n  }\r\n);\r\n\r\n// export const getFilteredContcats = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return filter\r\n//     ? contacts.filter((el) =>\r\n//         el.name.toLowerCase().includes(filter.toLowerCase())\r\n//       )\r\n//     : contacts;\r\n// };\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport styles from \"./contactList.module.css\";\r\nimport telBookOperations from \"../../../redux/telBookOperations\";\r\nimport { getFilteredContcats } from \"../telBookSelectors\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((el) => (\r\n          <CSSTransition classNames={styles} key={el.id} timeout={250}>\r\n            <li key={el.id} className={styles.listItems}>\r\n              <p className={styles.text}>{el.name}</p>\r\n              <p className={styles.text}>{el.number}</p>\r\n\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => dispatch(telBookOperations.deleteContact(el.id))}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getFilteredContcats(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { telBookReducers } from \"./telBookReducers\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst { reducer } = telBookReducers;\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./contactListFind.module.css\";\r\nimport store from \"../../../redux/store\";\r\nimport { getContacts } from \"../telBookSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nfunction FindInput({ onChange }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        classNames={styles}\r\n        timeout={500}\r\n        unmountOnExit\r\n        in={store.getState().contacts.items.length > 1}\r\n      >\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"outlined-basic\"\r\n          label=\"Find contacts by name\"\r\n          variant=\"outlined\"\r\n          name=\"filter\"\r\n          onChange={onChange}\r\n        />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FindInput);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function TelInput(prop) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        className={classes.root}\r\n        style={{ width: 200, margin: 10 }}\r\n        id=\"outlined-basic\"\r\n        label={prop.name}\r\n        variant=\"outlined\"\r\n        name={prop.name}\r\n        onChange={prop.onChange}\r\n        value={prop.value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { TelInput } from \"./TelInput\";\r\nimport styles from \"../../telBook.module.css\";\r\nimport telBookOperations from \"../../../../redux/telBookOperations\";\r\nimport { getContacts } from \"../../telBookSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContactForm({ contacts }) {\r\n  console.log(\"ContactForm Rerender\");\r\n  const [allertShow, setAllertShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange({ target }) {\r\n    const { name, value } = target;\r\n\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const lookingFor = contacts.find((el) => el.name === name);\r\n    if (lookingFor) {\r\n      setAllertShow(true);\r\n      setTimeout(() => {\r\n        setAllertShow(false);\r\n      }, 3000);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      dispatch(\r\n        telBookOperations.addContact({\r\n          name: name,\r\n          number: number,\r\n        })\r\n      );\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <CSSTransition timeout={5000} classNames={styles} in={allertShow}>\r\n        <div className={styles.alert}>\r\n          <p>This contact already in phonebook</p>\r\n        </div>\r\n      </CSSTransition>\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        className={classes.root}\r\n      >\r\n        <TelInput name={\"name\"} onChange={handleChange} value={name} />\r\n        <TelInput name={\"number\"} onChange={handleChange} value={number} />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import React, { useEffect } from \"react\";\r\nimport ContactList from \"./telInput/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FindInput from \"./telInput/FindInput\";\r\nimport styles from \"./telBook.module.css\";\r\nimport ContactForm from \"./telInput/contactForm/ContactForm\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\nimport telBookOperations from \"../../redux/telBookOperations\";\r\n\r\nfunction TelBook() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    actions: { filterContacts },\r\n  } = telBookReducers;\r\n\r\n  useEffect(() => {\r\n    dispatch(telBookOperations.getContacts());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <CSSTransition timeout={500} classNames={styles} appear unmountOnExit in>\r\n        <div>\r\n          <h2 className={styles.title}>Phonebook</h2>\r\n        </div>\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <FindInput\r\n        onChange={(event) => dispatch(filterContacts(event.target.value))}\r\n      />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TelBook;\r\n","import React, { Fragment } from \"react\";\r\nimport TelBook from \"./telBook/TelBook\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <TelBook />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}